import { WhiteboardInteractivityCenter } from './HMSWhiteboardCenter';
import { HMSInteractivityCenter, HMSPollQuestionCreateParams, InteractivityListener } from '../../interfaces';
import { HMSPoll, HMSPollCreateParams, HMSPollQuestionResponse, HMSPollQuestionResponseCreateParams, HMSQuizLeaderboardResponse } from '../../interfaces/session-store/polls';
import { IStore } from '../../sdk/store';
import { PollInfoParams } from '../../signal/interfaces';
import HMSTransport from '../../transport';
export declare class InteractivityCenter implements HMSInteractivityCenter {
    private transport;
    private store;
    private listener?;
    whiteboard: WhiteboardInteractivityCenter;
    constructor(transport: HMSTransport, store: IStore, listener?: InteractivityListener | undefined);
    setListener(listener?: InteractivityListener): void;
    createPoll(pollParams: HMSPollCreateParams): Promise<void>;
    startPoll(poll: string | HMSPollCreateParams): Promise<void>;
    addQuestionsToPoll(pollID: string, questions: HMSPollQuestionCreateParams[]): Promise<void>;
    stopPoll(pollID: string): Promise<void>;
    addResponsesToPoll(pollID: string, responses: HMSPollQuestionResponseCreateParams[]): Promise<void>;
    getPolls(): Promise<HMSPoll[]>;
    getResponses(_pollID: string): Promise<HMSPollQuestionResponse[]>;
    private createQuestionSetParams;
    private getQuestionInPoll;
    fetchLeaderboard(poll: HMSPoll, offset: number, count: number): Promise<HMSQuizLeaderboardResponse>;
}
export declare const createHMSPollFromPollParams: (pollParams: PollInfoParams) => HMSPoll;
